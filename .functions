getgenv().functions = {

    getRoot = function(plr)
        plr = plr or game.Players.LocalPlayer
        local sucess, root = pcall(function()
            return plr.Character.HumanoidRootPart or false
        end)
        return root
    end,

    getHumanoid = function(plr)
        plr = plr or game.Players.LocalPlayer
        local sucess, humanoid = pcall(function()
            return plr.Character.Humanoid or false
        end)
        return humanoid
    end,

    getCharacter = function(plr)
        plr = plr or game.Players.LocalPlayer
        local sucess, char = pcall(function()
            return plr.Character or false
        end)
        return char
    end,

    FindPlayer = function(playerName)
        local target = false 

        for i,v in pairs(game.Players:GetChildren()) do
            if v.Name:lower():match(playerName:lower()) or v.DisplayName:lower():match(playerName:lower()) then
                target = v
            end
        end

        return target
    end,

    getNearest = function(teamcheck)
        local nearest = 9e9
        local target

        for i,v in pairs(game.Players:GetChildren()) do

            if game.Players.LocalPlayer ~= v then

                pcall(function()
            
                    if ((teamcheck == true and v.TeamColor ~= game.Players.LocalPlayer.TeamColor) or teamcheck == false) then

                        local mag = (v.Character.Head.Position - game.Players.LocalPlayer.Character.Head.Position).Magnitude

                        if mag < nearest then
                            nearest = mag
                            target = v 
                        end
                    end
    
                end)

            end

        end

        return target 
    end,
    
    getNearestToMouse = function(teamcheck)
        local nearest = 9e9
        local target

        for i,v in pairs(game.Players:GetChildren()) do

            if v ~= game.Players.LocalPlayer then

                pcall(function()
            
                    if ((teamcheck == true and v.TeamColor ~= game.Players.LocalPlayer.TeamColor) or teamcheck == false) then

                        local vector, onscreen = workspace.CurrentCamera:worldToViewportPoint(v.Character.Head.Position)

                        if onscreen then

                            local mag = (game:GetService("UserInputService"):GetMouseLocation() - Vector3.new(vector.X, vector.Y)).Magnitude

                            if mag < nearest then

                                nearest = mag
                                target = v

                            end

                        end

                    end
    
                end)

            end

        end

        

        return target
    end,

    sendWebHook = function(tab, webhook)
        local req = (syn and syn.request) or request or http_request 

        req(
            {
                Url = webhook;
                Method = "POST";
                Headers = {
                    ["Content-Type"] = "application/json"
                };
                Body = game:GetService("HttpService"):JSONEncode(tab)
            }
        )
    end,

    sendNotification = function(title, text, duration)
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = title;
            Text = text;
            Duration = duration;
        })
    end,

    Translate = function(num)
        local final
        
        if num >= 0 and num < 1000 then
            final = tostring(num)
        end
        if num >= 1000 and num < 10000 then
            final = string.sub(num, 1,1).."."..string.sub(tostring(num),2,2)..'K'
        end
        if num >= 10000 and num < 100000 then
            final = string.sub(tostring(num), 1, 2) .. "." .. string.sub(num, 3,3) .. 'K'
        end
        if num >= 100000 and num < 1000000 then
            final = string.sub(num, 1,3) .. '.'..string.sub(num, 3,4) .. "K"
        end
        if num >= 1000000 and num < 10000000 then
            final = string.sub(num, 1,1) .. '.' .. string.sub(num, 2,3) .. "M"
        end
        if num >= 10000000 and num < 100000000 then
            final = string.sub(num, 1,2) .. '.' .. string.sub(num, 3,4) .. "M"
        end
        if num >= 100000000 and num < 1000000000 then
            final = string.sub(num, 1,2+1) .. '.' .. string.sub(num, 3+1,4+1) .. "M"
        end
        if num >= 1000000000 and num < 10000000000 then
            final = string.sub(num, 1,2) .. '.' .. string.sub(num, 3,4) .. "B"
        end
        if num >= 10000000000 and num < 100000000000 then
            final = string.sub(num, 1,3) .. '.' .. string.sub(num, 4,5) .. "B"
        end
        if num >= 100000000000 and num < 1000000000000 then
            final = string.sub(num, 1,1) .. '.' .. string.sub(num, 2,3) .. "T"
        end
        if num >= 1000000000000 and num < 10000000000000 then
            final = string.sub(num, 1,2) .. '.' .. string.sub(num, 3,4) .. "T"
        end
        if num >= 10000000000000 and num < 100000000000000 then
            final = string.sub(num, 1,3) .. '.' .. string.sub(num, 4,5) .. "T"
        end
        if num >= 100000000000000 and num < 1000000000000000 then
            final = string.sub(num, 1,1) .. '.' .. string.sub(num, 2,3) .. "Qa"
        end
        if num >= 1000000000000000 and num < 10000000000000000 then
            final = string.sub(num, 1,2) .. '.' .. string.sub(num, 3,4) .. "Qa"
        end
        if num >= 10000000000000000 and num < 100000000000000000 then
            final = string.sub(num, 1,3) .. '.' .. string.sub(num, 4,5) .. "Qa"
        end
    
        return final
    end
}
